
name: Staging workflow

on:
  push:
    branches: [ staging ]
  pull_request:
    branches: [ staging ]

jobs:
  build:

    strategy:
      matrix:
        node_version: [12.x]
        python_version: [3.8.x]

    runs-on: ubuntu-latest

    steps:

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
        aws-region: us-east-1

    - name: Branch Name
      run: echo Running on branch ${GITHUB_REF##*/}
        
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        version: ${{ matrix.node_version }}

    - name: Install NPM Packages
      run: |
        npm install i -g serverless
        npm install

    - name: Serverless Deploy
      run: |

        serverless deploy --stage test --verbose --conceal

        # if [[ ${GITHUB_REF##*/} = "master" ]]; then
        #   serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID_SANDBOX --secret $AWS_SECRET_ACCESS_KEY_SANDBOX --stage prod
        #   ./scripts/deploy.sh prod
        # elif [[ ${GITHUB_REF##*/} = "staging" ]]; then
        #   serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID_STAGING --secret $AWS_SECRET_ACCESS_KEY_STAGING --stage dev
        #   ./scripts/deploy.sh dev
        # fi
